// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nginx.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MultSSLSetRequest struct {
	Apikey               string           `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	Item                 []*SSLSetRequest `protobuf:"bytes,2,rep,name=item,proto3" json:"item,omitempty" bson:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *MultSSLSetRequest) Reset()         { *m = MultSSLSetRequest{} }
func (m *MultSSLSetRequest) String() string { return proto.CompactTextString(m) }
func (*MultSSLSetRequest) ProtoMessage()    {}
func (*MultSSLSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_917f1a70b1fd7255, []int{0}
}

func (m *MultSSLSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultSSLSetRequest.Unmarshal(m, b)
}
func (m *MultSSLSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultSSLSetRequest.Marshal(b, m, deterministic)
}
func (m *MultSSLSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultSSLSetRequest.Merge(m, src)
}
func (m *MultSSLSetRequest) XXX_Size() int {
	return xxx_messageInfo_MultSSLSetRequest.Size(m)
}
func (m *MultSSLSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultSSLSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultSSLSetRequest proto.InternalMessageInfo

func (m *MultSSLSetRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *MultSSLSetRequest) GetItem() []*SSLSetRequest {
	if m != nil {
		return m.Item
	}
	return nil
}

type SSLSetRequest struct {
	Directory            string   `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty" bson:"directory,omitempty"`
	CertName             string   `protobuf:"bytes,2,opt,name=cert_name,json=certName,proto3" json:"cert_name,omitempty" bson:"cert_name,omitempty"`
	KeyName              string   `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" bson:"key_name,omitempty"`
	Cert                 []byte   `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty" bson:"cert,omitempty"`
	Key                  []byte   `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty" bson:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SSLSetRequest) Reset()         { *m = SSLSetRequest{} }
func (m *SSLSetRequest) String() string { return proto.CompactTextString(m) }
func (*SSLSetRequest) ProtoMessage()    {}
func (*SSLSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_917f1a70b1fd7255, []int{1}
}

func (m *SSLSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSLSetRequest.Unmarshal(m, b)
}
func (m *SSLSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSLSetRequest.Marshal(b, m, deterministic)
}
func (m *SSLSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSLSetRequest.Merge(m, src)
}
func (m *SSLSetRequest) XXX_Size() int {
	return xxx_messageInfo_SSLSetRequest.Size(m)
}
func (m *SSLSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SSLSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SSLSetRequest proto.InternalMessageInfo

func (m *SSLSetRequest) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *SSLSetRequest) GetCertName() string {
	if m != nil {
		return m.CertName
	}
	return ""
}

func (m *SSLSetRequest) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *SSLSetRequest) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *SSLSetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SSLSetReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty" bson:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *SSLSetReply) Reset()         { *m = SSLSetReply{} }
func (m *SSLSetReply) String() string { return proto.CompactTextString(m) }
func (*SSLSetReply) ProtoMessage()    {}
func (*SSLSetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_917f1a70b1fd7255, []int{2}
}

func (m *SSLSetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSLSetReply.Unmarshal(m, b)
}
func (m *SSLSetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSLSetReply.Marshal(b, m, deterministic)
}
func (m *SSLSetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSLSetReply.Merge(m, src)
}
func (m *SSLSetReply) XXX_Size() int {
	return xxx_messageInfo_SSLSetReply.Size(m)
}
func (m *SSLSetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SSLSetReply.DiscardUnknown(m)
}

var xxx_messageInfo_SSLSetReply proto.InternalMessageInfo

func (m *SSLSetReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*MultSSLSetRequest)(nil), "proto.MultSSLSetRequest")
	proto.RegisterType((*SSLSetRequest)(nil), "proto.SSLSetRequest")
	proto.RegisterType((*SSLSetReply)(nil), "proto.SSLSetReply")
}

func init() { proto.RegisterFile("nginx.proto", fileDescriptor_917f1a70b1fd7255) }

var fileDescriptor_917f1a70b1fd7255 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x50, 0xcd, 0x4e, 0xf3, 0x30,
	0x10, 0xfc, 0xf2, 0xd3, 0x36, 0xd9, 0x7c, 0x20, 0x58, 0x10, 0x0a, 0x7f, 0x52, 0x14, 0x2e, 0x39,
	0xe5, 0x50, 0xae, 0x9c, 0x7a, 0xe9, 0x05, 0xaa, 0x2a, 0x11, 0x67, 0x14, 0xc2, 0xaa, 0xb2, 0x9c,
	0xc4, 0xc6, 0xb8, 0x12, 0x7e, 0x06, 0x5e, 0x1a, 0xd9, 0x6d, 0x55, 0x0a, 0x27, 0xcf, 0xce, 0xac,
	0x47, 0xb3, 0x03, 0xc9, 0xb0, 0x62, 0xc3, 0x67, 0x29, 0x95, 0xd0, 0x02, 0x47, 0xee, 0xc9, 0x9f,
	0xe1, 0xf4, 0x69, 0xdd, 0xe9, 0xba, 0x7e, 0xac, 0x49, 0x57, 0xf4, 0xbe, 0xa6, 0x0f, 0x8d, 0x17,
	0x30, 0x6e, 0x24, 0xe3, 0x64, 0x52, 0x2f, 0xf3, 0x8a, 0xb8, 0xda, 0x4e, 0x58, 0x40, 0xc8, 0x34,
	0xf5, 0xa9, 0x9f, 0x05, 0x45, 0x32, 0x3d, 0xdf, 0x38, 0x95, 0x07, 0x7f, 0x2b, 0xb7, 0x91, 0x7f,
	0x79, 0x70, 0x74, 0xe8, 0x79, 0x03, 0xf1, 0x1b, 0x53, 0xd4, 0x6a, 0xa1, 0x76, 0xb6, 0x7b, 0x02,
	0xaf, 0x21, 0x6e, 0x49, 0xe9, 0x97, 0xa1, 0xe9, 0x29, 0xf5, 0x9d, 0x1a, 0x59, 0x62, 0xd1, 0xf4,
	0x84, 0x97, 0x10, 0x71, 0x32, 0x1b, 0x2d, 0x70, 0xda, 0x84, 0x93, 0x71, 0x12, 0x42, 0x68, 0xd7,
	0xd2, 0x30, 0xf3, 0x8a, 0xff, 0x95, 0xc3, 0x78, 0x02, 0x81, 0x8d, 0x3e, 0x72, 0x94, 0x85, 0xf9,
	0x2d, 0x24, 0xbb, 0x30, 0xb2, 0x33, 0x78, 0x0c, 0xbe, 0xe0, 0x2e, 0x43, 0x54, 0xf9, 0x82, 0x4f,
	0xe7, 0x30, 0x99, 0x2b, 0x22, 0x4d, 0x0a, 0x1f, 0x00, 0xf6, 0x75, 0x60, 0xba, 0xbd, 0xf0, 0x4f,
	0x43, 0x57, 0xf8, 0xeb, 0x76, 0xd9, 0x99, 0xfc, 0xdf, 0xec, 0x0e, 0xce, 0x98, 0x28, 0x57, 0x4a,
	0xb6, 0xe5, 0x8f, 0xaa, 0x67, 0xb0, 0xb0, 0xc3, 0xd2, 0xe2, 0xa5, 0xf7, 0x3a, 0x76, 0xe4, 0xfd,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xb2, 0x6e, 0xe2, 0x8e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	//多个SSL证书设置
	MultSSLSet(ctx context.Context, in *MultSSLSetRequest, opts ...grpc.CallOption) (*SSLSetReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) MultSSLSet(ctx context.Context, in *MultSSLSetRequest, opts ...grpc.CallOption) (*SSLSetReply, error) {
	out := new(SSLSetReply)
	err := c.cc.Invoke(ctx, "/proto.Greeter/MultSSLSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	//多个SSL证书设置
	MultSSLSet(context.Context, *MultSSLSetRequest) (*SSLSetReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_MultSSLSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultSSLSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).MultSSLSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/MultSSLSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).MultSSLSet(ctx, req.(*MultSSLSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MultSSLSet",
			Handler:    _Greeter_MultSSLSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nginx.proto",
}
